android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$1 -> android.support.v13.app.a:
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.b:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.c:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.youchip.youmobile.R -> com.youchip.youmobile.a:
com.youchip.youmobile.R$styleable -> com.youchip.youmobile.b:
    int[] ShopItemTextView -> ShopItemTextView
    int ShopItemTextView_quantity -> ShopItemTextView_quantity
    int ShopItemTextView_quantity_bg_color -> ShopItemTextView_quantity_bg_color
    int ShopItemTextView_quantity_bg_scale -> ShopItemTextView_quantity_bg_scale
    int ShopItemTextView_quantity_font_color -> ShopItemTextView_quantity_font_color
    int ShopItemTextView_quantity_font_scale -> ShopItemTextView_quantity_font_scale
com.youchip.youmobile.controller.AbstractAppControlActivity -> com.youchip.youmobile.controller.a:
    boolean appOk -> a
    boolean checkAppState() -> a
    java.lang.String getAppStateMessage() -> b
    void showDisableMessage() -> c
    void disableApp() -> d
com.youchip.youmobile.controller.MainActivity -> com.youchip.youmobile.controller.MainActivity:
    java.util.Set STATUS_BLOCKS -> k
    java.util.Set CRC_BLOCKS -> l
    com.youchip.youmobile.controller.txlog.TxLogger txLogger -> m
    java.util.List blackList -> n
    com.youchip.youmobile.controller.network.UpdateServiceStarter logSyncServiceStarter -> o
    com.youchip.youmobile.controller.network.UpdateServiceStarter blackListServiceStarter -> p
    com.youchip.youmobile.controller.gate.AccessChecker checker -> q
    android.os.Handler restartReadingHandler -> r
    java.lang.Runnable restartReadingRunnable -> s
    android.content.BroadcastReceiver blackListReceiver -> t
    android.content.BroadcastReceiver updatedConfigReceiver -> u
    void updateServicesConfig() -> j
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void onGrantAccess(java.lang.String,com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType) -> a
    void onDenieAccess() -> k
    java.util.Set getStatusBlocks() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onResume() -> onResume
    void onPause() -> onPause
    void restartService() -> l
    boolean access$0(com.youchip.youmobile.controller.MainActivity) -> a
    java.lang.String access$1(com.youchip.youmobile.controller.MainActivity) -> b
    android.widget.Button access$2(com.youchip.youmobile.controller.MainActivity) -> c
    void access$3(com.youchip.youmobile.controller.MainActivity) -> d
    void access$4(com.youchip.youmobile.controller.MainActivity,java.util.List) -> a
    void access$5(com.youchip.youmobile.controller.MainActivity) -> e
com.youchip.youmobile.controller.MainActivity$1 -> com.youchip.youmobile.controller.b:
    com.youchip.youmobile.controller.MainActivity this$0 -> a
    void run() -> run
com.youchip.youmobile.controller.MainActivity$2 -> com.youchip.youmobile.controller.c:
    com.youchip.youmobile.controller.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.youchip.youmobile.controller.MainActivity$3 -> com.youchip.youmobile.controller.d:
    com.youchip.youmobile.controller.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.youchip.youmobile.controller.SelectActionActivity -> com.youchip.youmobile.controller.SelectActionActivity:
    com.youchip.youmobile.controller.network.ChainConfigServiceCaller chainConfigServiceLoader -> a
    com.youchip.youmobile.controller.settings.SettingsInfoBox infoBox -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType backOfficeRole -> c
    java.lang.String userID -> d
    android.widget.Button debugModeButton -> e
    android.widget.Button cashPointButton -> f
    android.widget.Button shopModeButton -> g
    android.widget.Button gateModeButton -> h
    android.widget.Button helpDeskButton -> i
    com.youchip.youmobile.controller.txlog.TxLogger txLogger -> j
    android.view.View$OnClickListener onClickSwitchToHelpDeskMode -> k
    android.view.View$OnClickListener onClickSwitchToDebugMode -> l
    android.view.View$OnClickListener onClickSwitchToGateMode -> m
    android.view.View$OnClickListener onClickSwitchToShopMode -> n
    android.view.View$OnClickListener onClickSwitchToCashPointMode -> o
    int[] $SWITCH_TABLE$com$youchip$youmobile$model$chip$mc1kImpl$MC1KChipSpecs$AppType -> p
    void startIntent(java.lang.Class) -> a
    void loadConfigChip() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void updateRoleDependendPermissions(com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType) -> a
    void updateEventDependendPermission(long) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.youchip.youmobile.controller.SelectActionActivity,java.lang.Class) -> a
    int[] $SWITCH_TABLE$com$youchip$youmobile$model$chip$mc1kImpl$MC1KChipSpecs$AppType() -> f
com.youchip.youmobile.controller.SelectActionActivity$1 -> com.youchip.youmobile.controller.e:
    com.youchip.youmobile.controller.SelectActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.SelectActionActivity$2 -> com.youchip.youmobile.controller.f:
    com.youchip.youmobile.controller.SelectActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.SelectActionActivity$3 -> com.youchip.youmobile.controller.g:
    com.youchip.youmobile.controller.SelectActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.SelectActionActivity$4 -> com.youchip.youmobile.controller.h:
    com.youchip.youmobile.controller.SelectActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.SelectActionActivity$5 -> com.youchip.youmobile.controller.i:
    com.youchip.youmobile.controller.SelectActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.chipIO.ChipReaderActivity -> com.youchip.youmobile.controller.chipIO.a:
    java.lang.String LOG_TAG -> a
    android.widget.Button stateIndicator -> b
    android.content.Intent service -> c
    boolean restartService -> d
    java.lang.String keyA -> e
    java.lang.String requestChipMessage -> f
    java.lang.String processingMessage -> g
    int requestChipBackGroundColor -> h
    int processingBackGroundColor -> i
    android.content.BroadcastReceiver resultReceiver -> k
    android.content.BroadcastReceiver progressReceiver -> j
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    java.util.Set getStatusBlocks() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void restartChipServiceRead() -> f
    void startChipReadService() -> g
    void enableChipReadService() -> h
    void disableChipReadService() -> i
    void onResume() -> onResume
    void onPause() -> onPause
com.youchip.youmobile.controller.chipIO.ChipReaderActivity$1 -> com.youchip.youmobile.controller.chipIO.b:
    com.youchip.youmobile.controller.chipIO.ChipReaderActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.youchip.youmobile.controller.chipIO.ChipReaderActivity$2 -> com.youchip.youmobile.controller.chipIO.c:
    com.youchip.youmobile.controller.chipIO.ChipReaderActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.youchip.youmobile.controller.chipIO.ChipReaderService -> com.youchip.youmobile.controller.chipIO.ChipReaderService:
    com.youchip.youmobile.model.chip.interfaces.ChipIO chipIO -> a
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode serveMode -> b
    java.lang.String keyA -> c
    java.util.Set chipBlocks -> d
    boolean lastProgresValid -> e
    java.lang.String CLASS_NAME -> f
    com.youchip.youmobile.controller.chipIO.SimpleProgressListener progressListener -> g
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void onHandleIntentReadMode(android.content.Intent) -> a
    void onHandleIntentWritedMode(android.content.Intent) -> b
    void publishReadResults(com.youchip.youmobile.model.chip.interfaces.BasicChip,boolean) -> a
    void enableChipIO() -> a
    void disableChipIO() -> b
    boolean writeDataToChip(com.youchip.youmobile.model.chip.interfaces.Chip) -> a
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode access$0(com.youchip.youmobile.controller.chipIO.ChipReaderService) -> a
    java.lang.String access$1(com.youchip.youmobile.controller.chipIO.ChipReaderService) -> b
    void access$2(com.youchip.youmobile.controller.chipIO.ChipReaderService,boolean) -> a
    boolean access$3(com.youchip.youmobile.controller.chipIO.ChipReaderService) -> c
com.youchip.youmobile.controller.chipIO.ChipReaderService$1 -> com.youchip.youmobile.controller.chipIO.d:
    com.youchip.youmobile.controller.chipIO.ChipReaderService this$0 -> a
    void listen(int,int) -> a
com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode -> com.youchip.youmobile.controller.chipIO.e:
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode MODE_READ -> a
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode MODE_WRITE -> b
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode MODE_DISABLE -> c
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode[] ENUM$VALUES -> d
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode[] values() -> values
    com.youchip.youmobile.controller.chipIO.ChipReaderService$ServiceIOMode valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.controller.chipIO.MC1KChipIO -> com.youchip.youmobile.controller.chipIO.f:
    int deviceAddress -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode accessMode -> b
    byte[] keyA -> c
    com.iData.RfidControll rfidControll -> d
    java.util.Set chipReadListener -> e
    java.util.Set chipWriteListener -> f
    java.lang.String CURRENT_CLASS -> g
    int getDeviceAddress() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode getAccessMode() -> b
    com.youchip.youmobile.model.chip.interfaces.Chip readDataFromChipByBlockNumber(com.youchip.youmobile.model.chip.interfaces.Chip,java.util.Set) -> a
    boolean checkIOOperation(int,byte[]) -> a
    java.lang.String writeDataToChip(com.youchip.youmobile.model.chip.interfaces.Chip) -> a
    java.lang.String writeDataToChipByBlockNumber(com.youchip.youmobile.model.chip.interfaces.Chip,java.util.Set) -> b
    byte[] getKeyA() -> c
    void setKeyA(byte[]) -> a
    void setKeyA(java.lang.String) -> a
    void openIO() -> d
    void closeIO() -> e
    void addChipReadListener(com.youchip.youmobile.controller.chipIO.SimpleProgressListener) -> a
    void informReadListener(int,int) -> a
    void informWriteListener(int,int) -> b
com.youchip.youmobile.controller.chipIO.SimpleProgressListener -> com.youchip.youmobile.controller.chipIO.g:
    void listen(int,int) -> a
com.youchip.youmobile.controller.debug.DebugDetailsActivity -> com.youchip.youmobile.controller.debug.DebugDetailsActivity:
    com.youchip.youmobile.model.chip.interfaces.ChipIO chipIO -> a
    com.youchip.youmobile.model.chip.interfaces.Chip rfidChip -> b
    android.widget.ArrayAdapter adapter -> c
    android.widget.ListView listView -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void refreshListView(com.youchip.youmobile.model.chip.interfaces.Chip) -> a
com.youchip.youmobile.controller.debug.DebugMainActivity -> com.youchip.youmobile.controller.debug.DebugMainActivity:
    java.util.Set STATUS_BLOCKS -> k
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    java.util.Set getStatusBlocks() -> e
com.youchip.youmobile.controller.gate.AccessChecker -> com.youchip.youmobile.controller.gate.a:
    java.lang.String CURRENT_CLASS -> a
    java.lang.String generateResult(com.youchip.youmobile.controller.txlog.AccessResult[]) -> a
    boolean validateResult(com.youchip.youmobile.controller.txlog.AccessResult[]) -> b
    com.youchip.youmobile.controller.txlog.AccessResult checkCRC(com.youchip.youmobile.model.chip.interfaces.BasicChip,java.util.Set) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkEventID(long,long) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkAppType(com.youchip.youmobile.model.chip.interfaces.BasicChip,com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType[]) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkChipBlockState(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> a
    java.util.Set getValidVisitorRoles(com.youchip.youmobile.model.chip.interfaces.VisitorChip,com.youchip.youmobile.model.gate.AreaConfig) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkZoneAccess(com.youchip.youmobile.model.chip.interfaces.VisitorChip,com.youchip.youmobile.model.gate.AreaConfig,int) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkZoneTimeOutDelay(com.youchip.youmobile.model.chip.interfaces.VisitorChip,int) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkValidTime(java.util.Set,com.youchip.youmobile.model.gate.AreaConfig) -> a
    com.youchip.youmobile.controller.txlog.AccessResult checkBlackList(java.lang.String,java.util.List) -> a
com.youchip.youmobile.controller.gate.GateAccessActivity -> com.youchip.youmobile.controller.gate.GateAccessActivity:
    java.util.Set STATUS_BLOCKS -> q
    java.util.Set CRC_BLOCKS -> r
    com.youchip.youmobile.controller.txlog.TxGateLogger txLogger -> s
    java.lang.String userID -> t
    java.lang.String accessGrantedMessage -> k
    java.lang.String accessDeniedMessage -> l
    java.lang.String accessDeniedBannedMessage -> m
    java.lang.String accessDeniedFatalMessage -> n
    int accessGrantedBackGroundColor -> o
    int accessDeniedBackGroundColor -> p
    com.youchip.youmobile.model.gate.AreaConfig activeArea -> u
    java.util.List blackList -> v
    com.youchip.youmobile.controller.gate.AccessChecker checker -> w
    android.os.Handler restartReadingHandler -> x
    java.lang.Runnable restartReadingRunnable -> y
    android.content.BroadcastReceiver blackListReceiver -> z
    java.util.Set getStatusBlocks() -> e
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void onGrantAccess(java.lang.String,long,com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState,java.lang.String) -> a
    void onDenieAccess(java.lang.String,long,com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState,java.lang.String) -> b
    void onBanned(java.lang.String,long,com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState,java.lang.String) -> c
    void onCorruption(java.lang.String,long,com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState,java.lang.String) -> d
    void restartService() -> j
    boolean upDateChipZoneInfo(com.youchip.youmobile.model.chip.interfaces.VisitorChip,long) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onResume() -> onResume
    void onPause() -> onPause
    boolean access$0(com.youchip.youmobile.controller.gate.GateAccessActivity) -> a
    java.lang.String access$1(com.youchip.youmobile.controller.gate.GateAccessActivity) -> b
    android.widget.Button access$2(com.youchip.youmobile.controller.gate.GateAccessActivity) -> c
    int access$3(com.youchip.youmobile.controller.gate.GateAccessActivity) -> d
    void access$4(com.youchip.youmobile.controller.gate.GateAccessActivity) -> e
    java.lang.String access$5(com.youchip.youmobile.controller.gate.GateAccessActivity) -> f
    void access$6(com.youchip.youmobile.controller.gate.GateAccessActivity,java.util.List) -> a
com.youchip.youmobile.controller.gate.GateAccessActivity$1 -> com.youchip.youmobile.controller.gate.b:
    com.youchip.youmobile.controller.gate.GateAccessActivity this$0 -> a
    void run() -> run
com.youchip.youmobile.controller.gate.GateAccessActivity$2 -> com.youchip.youmobile.controller.gate.c:
    com.youchip.youmobile.controller.gate.GateAccessActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.youchip.youmobile.controller.gate.GateMainActivity -> com.youchip.youmobile.controller.gate.GateMainActivity:
    java.text.SimpleDateFormat quickDate -> a
    android.widget.ListView listView -> b
    android.widget.ArrayAdapter listAdapter -> c
    java.util.List gateConfig -> d
    java.util.List viewList -> e
    java.lang.String keyA -> f
    java.lang.String userID -> g
    java.lang.String LOG_TAG -> h
    android.widget.AdapterView$OnItemClickListener onItemClick -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void refreshListView() -> b
    java.util.List access$0(com.youchip.youmobile.controller.gate.GateMainActivity) -> a
    java.lang.String access$1() -> a
    java.lang.String access$2(com.youchip.youmobile.controller.gate.GateMainActivity) -> b
    java.lang.String access$3(com.youchip.youmobile.controller.gate.GateMainActivity) -> c
com.youchip.youmobile.controller.gate.GateMainActivity$1 -> com.youchip.youmobile.controller.gate.d:
    com.youchip.youmobile.controller.gate.GateMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity -> com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity:
    java.text.DateFormat formatter -> a
    com.youchip.youmobile.controller.txlog.TxHelpDeskLogger logger -> b
    com.youchip.youmobile.model.chip.interfaces.VisitorChip rfidChip -> c
    long oldAreaID -> d
    java.lang.String keyA -> e
    java.lang.String userID -> f
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType backOfficeRole -> g
    com.youchip.youmobile.view.ChipFieldExpandableListAdapter adapter -> h
    android.widget.ExpandableListView groupView -> i
    java.util.Map visitorRolesText -> j
    java.util.Map shopConfig -> k
    android.widget.ExpandableListView$OnChildClickListener onChipFieldClick -> l
    android.content.DialogInterface$OnClickListener onSubmitCheckOut -> m
    void onCreate(android.os.Bundle) -> onCreate
    java.util.Map extractVisitorRoles(java.lang.Iterable) -> a
    void refreshHelpDeskData(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean changeToEditMode(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> b
    void createCheckOutAreaDialog() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType access$0(com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity) -> a
    void access$1(com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity) -> b
    com.youchip.youmobile.model.chip.interfaces.VisitorChip access$2(com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity) -> c
com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity$1 -> com.youchip.youmobile.controller.helpdesk.a:
    com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity$2 -> com.youchip.youmobile.controller.helpdesk.b:
    com.youchip.youmobile.controller.helpdesk.HelpDeskDetailsExtendedActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.helpdesk.HelpDeskEditActivity -> com.youchip.youmobile.controller.helpdesk.HelpDeskEditActivity:
    com.youchip.youmobile.model.chip.interfaces.ChipIO chipIO -> b
    com.youchip.youmobile.model.chip.interfaces.VisitorChip rfidChip -> c
    java.util.Map visitorRolesMap -> a
    android.widget.TextView idTextView -> d
    android.widget.EditText eventIdTextField -> e
    android.widget.Spinner visitorRoles -> f
    android.widget.EditText credit1TextField -> g
    android.widget.EditText credit2TextField -> h
    android.widget.EditText areaIDTextField -> i
    android.widget.EditText areaTimeHourField -> j
    android.widget.CheckBox blockedCheckBox -> k
    java.text.DateFormat formatter -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void refreshGUIFields(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> a
    void setRoleList() -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean writeToChip() -> c
    long getRoleID() -> d
    void leaveEditMode() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    com.youchip.youmobile.model.chip.interfaces.VisitorChip access$0(com.youchip.youmobile.controller.helpdesk.HelpDeskEditActivity) -> a
com.youchip.youmobile.controller.helpdesk.HelpDeskEditActivity$1 -> com.youchip.youmobile.controller.helpdesk.c:
    com.youchip.youmobile.controller.helpdesk.HelpDeskEditActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.helpdesk.HelpDeskMainActivity -> com.youchip.youmobile.controller.helpdesk.HelpDeskMainActivity:
    java.util.Set STATUS_BLOCKS -> k
    java.util.Set CRC_BLOCKS -> l
    com.youchip.youmobile.controller.txlog.TxLogger txLogger -> m
    java.lang.String userID -> n
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType backOfficeRole -> o
    android.content.DialogInterface$OnClickListener onSubmitError -> p
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    java.util.Set getStatusBlocks() -> e
com.youchip.youmobile.controller.helpdesk.HelpDeskMainActivity$1 -> com.youchip.youmobile.controller.helpdesk.d:
    com.youchip.youmobile.controller.helpdesk.HelpDeskMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.helpdesk.HelpDeskModifyActivity -> com.youchip.youmobile.controller.helpdesk.HelpDeskModifyActivity:
    com.youchip.youmobile.model.chip.interfaces.VisitorChip oldChip -> k
    java.lang.String CURRENT_CLASS -> l
    java.util.Set STATUS_BLOCKS -> m
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void onCreate(android.os.Bundle) -> onCreate
    java.util.Set getStatusBlocks() -> e
    boolean upDateChipZoneInfo(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> a
com.youchip.youmobile.controller.network.BlackListConfigUpdateService -> com.youchip.youmobile.controller.a.a:
    java.lang.String CURRENT_CLASS -> a
    com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall serviceCall -> b
    com.youchip.youmobile.controller.txlog.TxLogger txLogger -> c
    android.content.Context context -> d
    long eventID -> e
    java.lang.String deviceID -> f
    void update() -> a
    void setServiceUrl(java.lang.String) -> a
    void setEventID(long) -> a
    void setDeviceID(java.lang.String) -> b
    java.lang.String access$0() -> b
    com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall access$1() -> c
    com.youchip.youmobile.controller.txlog.TxLogger access$2(com.youchip.youmobile.controller.network.BlackListConfigUpdateService) -> a
    android.content.Context access$3(com.youchip.youmobile.controller.network.BlackListConfigUpdateService) -> b
com.youchip.youmobile.controller.network.BlackListConfigUpdateService$1 -> com.youchip.youmobile.controller.a.b:
    com.youchip.youmobile.controller.network.BlackListConfigUpdateService this$0 -> a
    com.youchip.youmobile.controller.network.serviceInterface.SOAPRequest val$basicRequest -> b
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse val$basicResponse -> c
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.youchip.youmobile.controller.network.ChainConfigServiceCaller -> com.youchip.youmobile.controller.a.c:
    java.lang.String LOG_TAG -> d
    android.content.Context context -> a
    android.app.ProgressDialog progressDialog -> b
    java.lang.String waitMessage -> c
    com.youchip.youmobile.controller.txlog.TxLogger logger -> e
    int errorTitle -> f
    int successTitle -> g
    java.lang.String doneMsg -> h
    java.lang.String gateMsg -> i
    java.lang.String basicMsg -> j
    java.lang.String shopMsg -> k
    java.lang.String gateFailedMsg -> l
    java.lang.String basicFailedMsg -> m
    java.lang.String shopFailedMsg -> n
    java.lang.String failReasonURL -> o
    java.lang.String gateSuccessMsg -> p
    java.lang.String basicSuccessMsg -> q
    java.lang.String shopSuccessMsg -> r
    com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall serviceCall -> s
    java.lang.String displayMessage -> t
    java.lang.String deviceID -> u
    java.lang.String chipUID -> v
    long eventID -> w
    android.content.DialogInterface$OnClickListener onSubmitOKListener -> x
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void putDisplayMessage(java.lang.String) -> c
    boolean loadOnsideConfig(java.lang.String,long,java.lang.String) -> a
    void savingOnsideConfig(com.youchip.youmobile.model.network.response.BasicConfigSOAPResponse) -> a
    boolean loadGateConfig(java.lang.String,long,java.lang.String) -> b
    boolean loadShopConfig(java.lang.String,long,java.lang.String) -> c
    void setDeviceID(java.lang.String) -> a
    void setChipUID(java.lang.String) -> b
    void setEventID(long) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.youchip.youmobile.controller.network.ChainConfigServiceCaller$1 -> com.youchip.youmobile.controller.a.d:
    com.youchip.youmobile.controller.network.ChainConfigServiceCaller this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.network.LogSyncService -> com.youchip.youmobile.controller.a.e:
    java.lang.String CURRENT_CLASS -> a
    java.lang.String LOG_MAIN_FILE -> b
    java.io.File appRootDir -> c
    java.lang.String deviceID -> d
    android.content.Context context -> e
    com.youchip.youmobile.controller.txlog.TxLogger txLogger -> f
    com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall serviceCall -> g
    void update() -> a
    boolean upLoadToServer(java.io.File) -> a
    void sendNoLogFileToSyncMessage() -> b
    void setServiceUrl(java.lang.String) -> a
    void setEventID(long) -> a
    void setDeviceID(java.lang.String) -> b
    java.lang.String access$0() -> c
    com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall access$1() -> d
com.youchip.youmobile.controller.network.LogSyncService$1 -> com.youchip.youmobile.controller.a.f:
    com.youchip.youmobile.controller.network.LogSyncService this$0 -> a
    java.io.File val$file -> b
    com.youchip.youmobile.model.network.request.LogSyncSOAPRequest val$basicRequest -> c
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse val$basicResponse -> d
    java.io.File val$pushFile -> e
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.youchip.youmobile.controller.network.LogSyncService$2 -> com.youchip.youmobile.controller.a.g:
    com.youchip.youmobile.controller.network.LogSyncService this$0 -> a
    com.youchip.youmobile.model.network.request.LogSyncSOAPRequest val$basicRequest -> b
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse val$basicResponse -> c
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.youchip.youmobile.controller.network.UpdateServiceStarter -> com.youchip.youmobile.controller.a.h:
    java.lang.String CURRENT_CLASS -> a
    android.os.Handler restartLoaderHandler -> b
    long updateDelay -> c
    com.youchip.youmobile.controller.network.serviceInterface.ConfigUpdateService service -> d
    java.lang.Runnable serviceLoader -> e
    void startService() -> a
    void stopService() -> b
    void setDelay(long) -> a
    com.youchip.youmobile.controller.network.serviceInterface.ConfigUpdateService getService() -> c
    com.youchip.youmobile.controller.network.serviceInterface.ConfigUpdateService access$0(com.youchip.youmobile.controller.network.UpdateServiceStarter) -> a
    android.os.Handler access$1(com.youchip.youmobile.controller.network.UpdateServiceStarter) -> b
    long access$2(com.youchip.youmobile.controller.network.UpdateServiceStarter) -> c
com.youchip.youmobile.controller.network.UpdateServiceStarter$1 -> com.youchip.youmobile.controller.a.i:
    com.youchip.youmobile.controller.network.UpdateServiceStarter this$0 -> a
    void run() -> run
com.youchip.youmobile.controller.network.serviceCaller.WebServiceCall -> com.youchip.youmobile.controller.a.a.a:
    java.lang.String serviceURL -> a
    boolean callService(com.youchip.youmobile.controller.network.serviceInterface.SOAPRequest,com.youchip.youmobile.controller.network.serviceInterface.SOAPResponse) -> a
    void setServiceURL(java.lang.String) -> a
com.youchip.youmobile.controller.network.serviceInterface.ConfigUpdateService -> com.youchip.youmobile.controller.a.b.a:
    void update() -> a
    void setServiceUrl(java.lang.String) -> a
    void setEventID(long) -> a
    void setDeviceID(java.lang.String) -> b
com.youchip.youmobile.controller.network.serviceInterface.SOAPRequest -> com.youchip.youmobile.controller.a.b.b:
    java.lang.String getNameSpace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getAction() -> c
com.youchip.youmobile.controller.network.serviceInterface.SOAPResponse -> com.youchip.youmobile.controller.a.b.c:
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
com.youchip.youmobile.controller.settings.ConfigAccess -> com.youchip.youmobile.controller.settings.a:
    android.content.SharedPreferences getSettings(android.content.Context) -> a
    java.lang.String getLogMainFile() -> a
    void putRawKeyValuePair(android.content.Context,java.lang.String,java.lang.String) -> a
    int getZoneCheckInDelay(android.content.Context) -> b
    long getMaxLogFileSize(android.content.Context) -> c
    java.lang.String getServiceURL(android.content.Context) -> d
    long getLogSyncDelay(android.content.Context) -> e
    long getBlackListUpdateDelay(android.content.Context) -> f
    java.lang.String get1stCurrencySymbol(android.content.Context) -> g
    java.lang.String get2ndCurrencySymbol(android.content.Context) -> h
    long getMaxCredit1(android.content.Context) -> i
    long getMaxCredit2(android.content.Context) -> j
    long getEventID(android.content.Context) -> k
    java.lang.String getKeyA(android.content.Context) -> l
    java.lang.String getDeviceID(android.content.Context) -> m
    java.io.File getLogFileDirectory(android.content.Context) -> n
    void storeServiceURL(android.content.Context,java.lang.String,java.lang.String) -> b
    void storeEventID(android.content.Context,long) -> a
    void storeAreaConfig(android.content.Context,java.util.List) -> a
    void storeBlackList(android.content.Context,java.util.List) -> b
    java.util.List getBlackList(android.content.Context) -> o
    java.util.List getAreaConfig(android.content.Context) -> p
    void storeShopConfig(android.content.Context,java.util.Map) -> a
    java.util.Map getShopConfig(android.content.Context) -> q
    void storeDeviceID(android.content.Context,java.lang.String) -> a
com.youchip.youmobile.controller.settings.ConfigChipLoadActivity -> com.youchip.youmobile.controller.settings.ConfigChipLoadActivity:
    java.util.Set STATUS_BLOCKS -> k
    java.util.Set CRC_BLOCKS -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    void leaveActivity(boolean,java.lang.String) -> a
    java.util.Set getStatusBlocks() -> e
com.youchip.youmobile.controller.settings.SettingsInfoBox -> com.youchip.youmobile.controller.settings.b:
    java.lang.String deviceIDTitle -> a
    java.lang.String memoryTitle -> b
    java.lang.String appVersion -> c
    void showInfoWindow(android.content.Context) -> a
com.youchip.youmobile.controller.shop.PaymentMethod -> com.youchip.youmobile.controller.shop.a:
    com.youchip.youmobile.controller.shop.PaymentMethod PAYMENT_NONE -> a
    com.youchip.youmobile.controller.shop.PaymentMethod PAYMENT_CHIP -> b
    com.youchip.youmobile.controller.shop.PaymentMethod PAYMENT_CASH -> c
    com.youchip.youmobile.controller.shop.PaymentMethod PAYMENT_CARD -> d
    int txID -> e
    com.youchip.youmobile.controller.shop.PaymentMethod[] ENUM$VALUES -> f
    java.lang.String toString() -> toString
    com.youchip.youmobile.controller.shop.PaymentMethod paymentMethodByInt(int) -> a
    com.youchip.youmobile.controller.shop.PaymentMethod[] values() -> values
    com.youchip.youmobile.controller.shop.PaymentMethod valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.controller.shop.ShopMainActivity -> com.youchip.youmobile.controller.shop.ShopMainActivity:
    java.lang.String CURRENT_CLASS -> a
    android.app.Dialog paymentMethodDialog -> b
    com.youchip.youmobile.controller.shop.PaymentMethod paymentMethod -> c
    boolean isCancelationMode -> d
    java.lang.String keyA -> e
    java.lang.String userID -> f
    long eventID -> g
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType backOfficeRole -> h
    java.util.Map shopInventory -> i
    com.youchip.youmobile.model.shop.ShoppingCart shoppingCart -> j
    android.widget.GridView shopItemGrid -> k
    android.widget.TextView totalPrice -> l
    android.widget.TextView totalQuantity -> m
    android.widget.Button cancelPurchaseButton -> n
    android.widget.Button submitPurchaseButton -> o
    java.lang.String cancelMessage -> p
    java.lang.String emptyShoppingCart -> q
    long maxCredit1 -> r
    long maxCredit2 -> s
    java.lang.String currencySymbol -> t
    java.lang.String currencySymbol2 -> u
    com.youchip.youmobile.view.shop.ShopItemAdapter shopItemAdapter -> v
    android.widget.AdapterView$OnItemClickListener onClickShopItem -> w
    android.view.View$OnClickListener onClickShoppingCart -> x
    com.youchip.youmobile.controller.shop.ShopMainActivity$SerializableOnClickListener onSubmitShopping -> y
    android.widget.AdapterView$OnItemLongClickListener onLongclickShopItem -> z
    android.content.DialogInterface$OnClickListener onConfirmPositiveShoppingResult -> A
    android.view.View$OnClickListener onSubmitPurchase -> B
    android.view.View$OnClickListener onCancelPurchase -> C
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$shop$ShoppingErrorCause -> D
    void addItemToCart(long) -> a
    void addItemToCart(com.youchip.youmobile.model.shop.ShoppingCartItem) -> c
    void setCartItemQuantity(com.youchip.youmobile.model.shop.ShoppingCartItem) -> d
    void submitTrade() -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPositiveResult(long,long,long,long) -> a
    void clearShoppingCart() -> h
    void onNegativeResult(com.youchip.youmobile.controller.shop.ShoppingErrorCause,long,long) -> a
    void onCRCError() -> i
    void onWrongAPPType() -> j
    android.app.Dialog createPaymentMethodDialog() -> k
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void toggleShoppingMode(android.view.MenuItem) -> a
    void openShoppingCart() -> l
    void openShoppingCartBeforePayment() -> m
    void onSubmitQuantityChange(com.youchip.youmobile.model.shop.ShoppingCartItem) -> a
    void onSubmitValueChange(com.youchip.youmobile.model.shop.ShoppingCartItem) -> b
    int getErrorMessageID(com.youchip.youmobile.controller.shop.ShoppingErrorCause) -> a
    java.util.Map access$0(com.youchip.youmobile.controller.shop.ShopMainActivity) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType access$1(com.youchip.youmobile.controller.shop.ShopMainActivity) -> b
    boolean access$2(com.youchip.youmobile.controller.shop.ShopMainActivity) -> c
    com.youchip.youmobile.model.shop.ShoppingCart access$3(com.youchip.youmobile.controller.shop.ShopMainActivity) -> d
    void access$4(com.youchip.youmobile.controller.shop.ShopMainActivity,long) -> a
    java.lang.String access$5(com.youchip.youmobile.controller.shop.ShopMainActivity) -> e
    void access$6(com.youchip.youmobile.controller.shop.ShopMainActivity) -> f
    void access$7(com.youchip.youmobile.controller.shop.ShopMainActivity) -> g
    boolean access$8() -> e
    void access$9(com.youchip.youmobile.controller.shop.ShopMainActivity) -> h
    void access$10(com.youchip.youmobile.controller.shop.ShopMainActivity) -> i
    android.app.Dialog access$11(com.youchip.youmobile.controller.shop.ShopMainActivity) -> j
    void access$12(com.youchip.youmobile.controller.shop.ShopMainActivity) -> k
    java.lang.String access$13(com.youchip.youmobile.controller.shop.ShopMainActivity) -> l
    void access$14(com.youchip.youmobile.controller.shop.ShopMainActivity) -> m
    java.lang.String access$15(com.youchip.youmobile.controller.shop.ShopMainActivity) -> n
    void access$16(com.youchip.youmobile.controller.shop.ShopMainActivity,com.youchip.youmobile.controller.shop.PaymentMethod) -> a
    com.youchip.youmobile.controller.shop.PaymentMethod access$17(com.youchip.youmobile.controller.shop.ShopMainActivity) -> o
    void access$18(com.youchip.youmobile.controller.shop.ShopMainActivity,boolean) -> a
    com.youchip.youmobile.view.shop.ShopItemAdapter access$19(com.youchip.youmobile.controller.shop.ShopMainActivity) -> p
    android.widget.Button access$20(com.youchip.youmobile.controller.shop.ShopMainActivity) -> q
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$shop$ShoppingErrorCause() -> f
com.youchip.youmobile.controller.shop.ShopMainActivity$1 -> com.youchip.youmobile.controller.shop.b:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.youchip.youmobile.controller.shop.ShopMainActivity$10 -> com.youchip.youmobile.controller.shop.c:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    android.view.MenuItem val$item -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$2 -> com.youchip.youmobile.controller.shop.d:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$3 -> com.youchip.youmobile.controller.shop.e:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$4 -> com.youchip.youmobile.controller.shop.f:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.youchip.youmobile.controller.shop.ShopMainActivity$5 -> com.youchip.youmobile.controller.shop.g:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$6 -> com.youchip.youmobile.controller.shop.h:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$7 -> com.youchip.youmobile.controller.shop.i:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$8 -> com.youchip.youmobile.controller.shop.j:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$9 -> com.youchip.youmobile.controller.shop.k:
    com.youchip.youmobile.controller.shop.ShopMainActivity this$0 -> a
    android.view.MenuItem val$item -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.controller.shop.ShopMainActivity$SerializableOnClickListener -> com.youchip.youmobile.controller.shop.l:
com.youchip.youmobile.controller.shop.ShopPayActivity -> com.youchip.youmobile.controller.shop.ShopPayActivity:
    com.youchip.youmobile.controller.txlog.TxShopLogger txLogger -> k
    java.lang.String userID -> l
    java.util.Set STATUS_BLOCKS -> m
    java.util.Set CRC_BLOCKS -> n
    com.youchip.youmobile.model.shop.ShoppingCart shoppingCart -> o
    long maxCredit1 -> p
    long maxCredit2 -> q
    com.youchip.youmobile.controller.shop.PaymentMethod paymentMethod -> r
    long eventID -> s
    com.youchip.youmobile.controller.shop.ShoppingErrorCause errorCause -> t
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType -> u
    void onCreate(android.os.Bundle) -> onCreate
    void onValidChipReadResult(android.content.Context,com.youchip.youmobile.model.chip.interfaces.BasicChip) -> a
    java.util.Set getStatusBlocks() -> e
    boolean performTrade(com.youchip.youmobile.model.chip.interfaces.VisitorChip) -> a
    void setErrorMessage(com.youchip.youmobile.controller.txlog.TxType) -> a
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType() -> j
com.youchip.youmobile.controller.shop.ShoppingErrorCause -> com.youchip.youmobile.controller.shop.m:
    com.youchip.youmobile.controller.shop.ShoppingErrorCause NO_ERROR -> a
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_INVALID_CRC -> b
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_INVALID_APP -> c
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_INVALID_EVENT -> d
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_BUY_ARTICLE -> e
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_LOAD_CREDIT -> f
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_UNLOAD_CREDIT -> g
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_CANCELATION -> h
    com.youchip.youmobile.controller.shop.ShoppingErrorCause CAUSE_UNKNOWN -> i
    com.youchip.youmobile.controller.shop.ShoppingErrorCause[] ENUM$VALUES -> j
    com.youchip.youmobile.controller.shop.ShoppingErrorCause[] values() -> values
    com.youchip.youmobile.controller.shop.ShoppingErrorCause valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.controller.txlog.AccessResult -> com.youchip.youmobile.controller.b.a:
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState accessState -> a
    java.lang.String accessMessage -> b
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState getAccessState() -> a
    void setAccessState(com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState) -> a
    java.lang.String getAccessMessage() -> b
    void setAccessMessage(java.lang.String) -> a
com.youchip.youmobile.controller.txlog.JournalFileLogger -> com.youchip.youmobile.controller.b.b:
    java.lang.String logFile -> a
    android.content.Context context -> b
    java.lang.String LOGGER_TAG -> c
    java.io.File writeExternalLog(java.lang.String) -> a
    void writeLog(java.lang.String,java.io.FileOutputStream) -> a
com.youchip.youmobile.controller.txlog.TxGateLogger -> com.youchip.youmobile.controller.b.c:
    boolean accessControll(java.lang.String,long,com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState,java.lang.String) -> a
com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState -> com.youchip.youmobile.controller.b.d:
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState PASSED -> a
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState CHECKED_IN -> b
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState CHECKED_OUT -> c
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState BLOCKED -> d
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState BANNED -> e
    java.lang.String stateID -> f
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState[] ENUM$VALUES -> g
    java.lang.String toString() -> toString
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState[] values() -> values
    com.youchip.youmobile.controller.txlog.TxGateLogger$AccessState valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.controller.txlog.TxHelpDeskLogger -> com.youchip.youmobile.controller.b.e:
    boolean i(java.lang.String,long,java.lang.String) -> a
com.youchip.youmobile.controller.txlog.TxLogger -> com.youchip.youmobile.controller.b.f:
    java.lang.String operatorNumber -> b
    com.youchip.youmobile.controller.txlog.JournalFileLogger androidLogger -> c
    java.lang.String logFile -> d
    java.lang.String dateFormat -> e
    long MAX_LOG_FILE_SIZE -> f
    android.content.Context context -> g
    java.lang.String LOG_TAG -> a
    boolean logRotate(java.lang.String) -> a
    java.io.File renameFile(android.content.Context,java.io.File) -> a
    java.lang.String getLogFileName(android.content.Context) -> a
    boolean log(com.youchip.youmobile.controller.txlog.TxLogger$LogLevel,com.youchip.youmobile.controller.txlog.TxType,java.lang.String,long,long,long,com.youchip.youmobile.controller.shop.PaymentMethod,long,long,long,java.lang.String,java.lang.String) -> a
    java.lang.String getLogTime() -> a
    java.lang.String createLogString(com.youchip.youmobile.controller.txlog.TxLogger$LogLevel,com.youchip.youmobile.controller.txlog.TxType,java.lang.String,java.lang.String,long,long,long,com.youchip.youmobile.controller.shop.PaymentMethod,long,long,long,java.lang.String,java.lang.String) -> a
    java.lang.String createNoFileInfoLog() -> b
    boolean status(java.lang.String) -> b
    boolean configRead(java.lang.String,java.lang.String) -> a
    boolean curruptedCRC(java.lang.String) -> c
    boolean invalidAppType(java.lang.String) -> d
    boolean invalidEvent(java.lang.String) -> e
    boolean invalidLogin(java.lang.String,java.lang.String) -> b
    java.lang.String getSHA1(java.lang.String) -> f
    void setOperatorNumber(java.lang.String) -> g
com.youchip.youmobile.controller.txlog.TxLogger$LogLevel -> com.youchip.youmobile.controller.b.g:
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel NONE -> a
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel CRITICAL -> b
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel INFO -> c
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel ALL -> d
    int level -> e
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel[] ENUM$VALUES -> f
    java.lang.String toString() -> toString
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel[] values() -> values
    com.youchip.youmobile.controller.txlog.TxLogger$LogLevel valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.controller.txlog.TxShopLogger -> com.youchip.youmobile.controller.b.h:
    java.util.List logBuffer -> b
    void addToTempLog(com.youchip.youmobile.controller.txlog.TxType,java.lang.String,long,long,long,com.youchip.youmobile.controller.shop.PaymentMethod,long,long) -> a
    void clearLog() -> c
    void saveLog() -> d
com.youchip.youmobile.controller.txlog.TxType -> com.youchip.youmobile.controller.b.i:
    com.youchip.youmobile.controller.txlog.TxType LOAD_CREDIT -> a
    com.youchip.youmobile.controller.txlog.TxType UNLOAD_CREDIT -> b
    com.youchip.youmobile.controller.txlog.TxType BUY_ARTICLE -> c
    com.youchip.youmobile.controller.txlog.TxType CANCELATION -> d
    com.youchip.youmobile.controller.txlog.TxType ACCES_CONTROL -> e
    com.youchip.youmobile.controller.txlog.TxType HELPDESK -> f
    com.youchip.youmobile.controller.txlog.TxType STATUS -> g
    com.youchip.youmobile.controller.txlog.TxType AREA_CHANGE -> h
    com.youchip.youmobile.controller.txlog.TxType CFG_READ -> i
    com.youchip.youmobile.controller.txlog.TxType NO_TX_LOG -> j
    com.youchip.youmobile.controller.txlog.TxType DEBUG -> k
    int txTypeID -> l
    com.youchip.youmobile.controller.txlog.TxType[] ENUM$VALUES -> m
    com.youchip.youmobile.controller.txlog.TxType TxTypeFromInteger(int) -> a
    java.lang.String toString() -> toString
    com.youchip.youmobile.controller.txlog.TxType[] values() -> values
    com.youchip.youmobile.controller.txlog.TxType valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.exceptions.RfidReadException -> com.youchip.youmobile.a.a.a.a:
com.youchip.youmobile.model.chip.exceptions.RfidSecurityException -> com.youchip.youmobile.a.a.a.b:
com.youchip.youmobile.model.chip.exceptions.RfidTransactionException -> com.youchip.youmobile.a.a.a.c:
com.youchip.youmobile.model.chip.exceptions.RfidWriteException -> com.youchip.youmobile.a.a.a.d:
com.youchip.youmobile.model.chip.interfaces.BasicChip -> com.youchip.youmobile.a.a.b.a:
    long getEventID() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType getAppType() -> b
com.youchip.youmobile.model.chip.interfaces.Chip -> com.youchip.youmobile.a.a.b.b:
    java.lang.String getUID() -> c
    java.util.Set getChangedBlocks() -> d
    byte[] getRawBlock(int) -> a
    boolean isValid(java.util.Set) -> a
    java.util.Set getActiveBlocks() -> e
    void setRawBlock(byte[],int) -> a
    java.util.Map getRawData() -> f
    void updateTransactionCounter() -> g
    void updateCRC() -> h
    void resetChangedBlocks() -> i
com.youchip.youmobile.model.chip.interfaces.ChipField -> com.youchip.youmobile.a.a.b.c:
    int getBlock1Pos() -> a
    int getBlock2Pos() -> b
    int getSize() -> c
    int getMultiplicity() -> d
    int getTotalSize() -> e
    int getBytePos() -> f
    boolean isTxnSave() -> g
    int getTxnPos() -> h
    int getNettoBlockSize() -> i
    boolean usesCRC() -> j
com.youchip.youmobile.model.chip.interfaces.ChipIO -> com.youchip.youmobile.a.a.b.d:
    void setKeyA(java.lang.String) -> a
    void openIO() -> d
    void closeIO() -> e
    com.youchip.youmobile.model.chip.interfaces.Chip readDataFromChipByBlockNumber(com.youchip.youmobile.model.chip.interfaces.Chip,java.util.Set) -> a
    java.lang.String writeDataToChip(com.youchip.youmobile.model.chip.interfaces.Chip) -> a
    void addChipReadListener(com.youchip.youmobile.controller.chipIO.SimpleProgressListener) -> a
com.youchip.youmobile.model.chip.interfaces.ConfigChip -> com.youchip.youmobile.a.a.b.e:
    java.lang.String getServiceHost() -> j
    java.lang.String getServiceName() -> k
com.youchip.youmobile.model.chip.interfaces.VisitorChip -> com.youchip.youmobile.a.a.b.f:
    long getCredit1() -> j
    long getCredit2() -> k
    java.util.Map getVoucher() -> l
    boolean isBlocked() -> m
    long getInAreaID() -> n
    java.util.Date getInAreaTime() -> o
    java.util.Set getVisitorRoles() -> p
    void setEventID(long) -> a
    void setCredit1(long) -> b
    void setCredit2(long) -> c
    void setVoucher(java.util.Map) -> a
    void setBlocked(boolean) -> a
    void setInAreaID(long) -> d
    void setInAreaTime(java.util.Date) -> a
com.youchip.youmobile.model.chip.mc1kImpl.AbstractMC1KChip -> com.youchip.youmobile.a.a.c.a:
    java.util.Map rawData -> a
    java.util.Set txToUpdate -> b
    java.util.Set changedBlocks -> c
    java.util.Set crcToUpdate -> d
    java.util.SortedSet getActiveBlocks() -> q
    void resetChangedBlocks() -> i
    java.lang.String getUID() -> c
    byte[] getUIDBytes() -> r
    byte[] retrieveSingleChipData(com.youchip.youmobile.model.chip.interfaces.ChipField) -> a
    java.util.Set retrieveMultipleChipData(com.youchip.youmobile.model.chip.interfaces.ChipField) -> b
    void setRawData(java.util.Map) -> b
    java.util.Map getRawData() -> f
    void setRawBlock(byte[],int) -> a
    byte[] getRawBlock(int) -> a
    void updateSingleChipData(com.youchip.youmobile.model.chip.interfaces.ChipField,byte[]) -> a
    byte[] validateFieldData(com.youchip.youmobile.model.chip.interfaces.ChipField,byte[]) -> b
    boolean hasFieldDataChanged(byte[],int,int,int,int) -> a
    java.util.Set getChangedBlocks() -> d
    boolean isFieldTxSave(com.youchip.youmobile.model.chip.interfaces.ChipField) -> c
    int getTxBackUpBlock(com.youchip.youmobile.model.chip.interfaces.ChipField) -> d
    int getTxActiveBlock(com.youchip.youmobile.model.chip.interfaces.ChipField) -> e
    void updateTransactionCounter() -> g
    byte[] getBlock(int) -> b
    void updateCRC() -> h
    boolean isValid(java.util.Set) -> a
    byte calcByteCRC(byte,byte[],int) -> a
    byte calcByteCRC(byte[]) -> a
    java.util.Set getActiveBlocks() -> e
com.youchip.youmobile.model.chip.mc1kImpl.MC1KBasicChip -> com.youchip.youmobile.a.a.c.b:
    void setEventID(long) -> a
    long getEventID() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType getAppType() -> b
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs -> com.youchip.youmobile.a.a.c.c:
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode -> com.youchip.youmobile.a.a.c.d:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode IDLE_KEYA -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode ALL_KEYA -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode IDLE_KEYB -> c
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode ALL_KEYB -> d
    int value -> e
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode[] ENUM$VALUES -> f
    int getValue() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AccessMode valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType -> com.youchip.youmobile.a.a.c.e:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType NO_APP -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType VISITOR_APP -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType AMPLOYE_APP -> c
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType SUPERVISOR_APP -> d
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType ADMIN_APP -> e
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType CONFIG_LOAD_APP -> f
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType GATE_SWITCHER_APP -> g
    int type -> h
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType[] ENUM$VALUES -> i
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType fromInteger(long) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType fromInteger(int) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$AppType valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields -> com.youchip.youmobile.a.a.c.f:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields UID -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields EVENT_ID -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields APPTYPE -> c
    int block1 -> d
    int block2 -> e
    int size -> f
    int bytePos -> g
    int multiplicity -> h
    boolean useTxc -> i
    boolean useCrc -> j
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields[] ENUM$VALUES -> k
    int getBlock1Pos() -> a
    int getBlock2Pos() -> b
    int getSize() -> c
    int getMultiplicity() -> d
    int getTotalSize() -> e
    int getBytePos() -> f
    boolean isTxnSave() -> g
    int getTxnPos() -> h
    boolean usesCRC() -> j
    int getNettoBlockSize() -> i
    int getNettoBlockSize(boolean,boolean) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$FactoryFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security -> com.youchip.youmobile.a.a.c.g:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security DEFAULT_KEY_A -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security DEFAULT_KEY_B -> b
    byte[] key -> c
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security[] ENUM$VALUES -> d
    byte[] getValue() -> a
    int getSize() -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Security valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure -> com.youchip.youmobile.a.a.c.h:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure SECTOR_COUNT -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure BLOCKS_PER_SECTOR -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure BYTES_PER_BLOCK -> c
    int value -> d
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure[] ENUM$VALUES -> e
    int getValue() -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KChipSpecs$Structure valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChip -> com.youchip.youmobile.a.a.c.i:
    java.lang.String getServiceHost() -> j
    java.lang.String getServiceName() -> k
com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField -> com.youchip.youmobile.a.a.c.j:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField SVC_PROTOCOLL -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField SVC_PORT -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField SVC_IP -> c
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField SVC_SUBDOMAIN -> d
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField SVC_NAME -> e
    int block1 -> f
    int block2 -> g
    int size -> h
    int bytePos -> i
    int multiplicity -> j
    boolean useTxc -> k
    boolean useCrc -> l
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField[] ENUM$VALUES -> m
    int getBlock1Pos() -> a
    int getBlock2Pos() -> b
    int getBytePos() -> f
    int getSize() -> c
    int getMultiplicity() -> d
    int getTotalSize() -> e
    boolean isTxnSave() -> g
    boolean usesCRC() -> j
    int getTxnPos() -> h
    int getNettoBlockSize() -> i
    int getNettoBlockSize(boolean,boolean) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KConfigChipField valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChip -> com.youchip.youmobile.a.a.c.k:
    long getCredit1() -> j
    long getCredit2() -> k
    java.util.Map getVoucher() -> l
    boolean isBlocked() -> m
    long getInAreaID() -> n
    java.util.Date getInAreaTime() -> o
    java.util.Set getVisitorRoles() -> p
    void setCredit1(long) -> b
    void setCredit2(long) -> c
    void setVoucher(java.util.Map) -> a
    void setBlocked(boolean) -> a
    void setInAreaID(long) -> d
    void setInAreaTime(java.util.Date) -> a
    boolean isValid(java.util.Set) -> a
com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField -> com.youchip.youmobile.a.a.c.l:
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField IN_AREA_ID -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField IN_AREA_TIME_HH -> b
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField IN_AREA_TIME_MM -> c
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField VISITOR_ROLES -> d
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField CREDIT_1 -> e
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField CREDIT_2 -> f
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField VOUCHER -> g
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField BACKOFFICE_ROLES -> h
    int block1 -> i
    int block2 -> j
    int size -> k
    int bytePos -> l
    int multiplicity -> m
    boolean useTxc -> n
    boolean useCrc -> o
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField[] ENUM$VALUES -> p
    int getBlock1Pos() -> a
    int getBlock2Pos() -> b
    int getBytePos() -> f
    int getSize() -> c
    int getMultiplicity() -> d
    int getTotalSize() -> e
    boolean isTxnSave() -> g
    int getTxnPos() -> h
    boolean usesCRC() -> j
    int getNettoBlockSize() -> i
    int getNettoBlockSize(boolean,boolean) -> a
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField[] values() -> values
    com.youchip.youmobile.model.chip.mc1kImpl.MC1KVisitorChipField valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.gate.AreaConfig -> com.youchip.youmobile.a.b.a:
    java.lang.String areaTitle -> a
    long areaID -> b
    long eventID -> c
    boolean isZone -> d
    boolean isCheckIn -> e
    java.util.Set visitorRoles -> f
    java.lang.String getAreaTitle() -> a
    long getAreaID() -> b
    boolean isZone() -> c
    boolean isCheckIn() -> d
    void setAreaTitle(java.lang.String) -> a
    void setAreaID(long) -> a
    void setEventID(long) -> b
    void setZone(boolean) -> a
    void setCheckIn(boolean) -> b
    void addVisitorRole(com.youchip.youmobile.model.gate.VisitorRole) -> a
    java.util.Set getRoles() -> e
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.youchip.youmobile.model.gate.BlockedChip -> com.youchip.youmobile.a.b.b:
    java.util.Date blockedUntil -> a
    java.lang.String UID -> b
    long eventID -> c
    boolean banned -> d
    java.util.Date getBlockedUntil() -> a
    java.lang.String getUID() -> b
    void setBlockedUntil(java.util.Date) -> a
    void setUID(java.lang.String) -> a
    boolean isBanned() -> c
    void setBanned(boolean) -> a
    void setEventID(long) -> a
    java.lang.String toString() -> toString
com.youchip.youmobile.model.gate.VisitorRole -> com.youchip.youmobile.a.b.c:
    java.lang.String roleName -> a
    int roleID -> b
    java.util.Date validTimeStart -> c
    java.util.Date validTimeStop -> d
    java.util.Date getValidTimeStart() -> a
    java.util.Date getValidTimeStop() -> b
    java.lang.String getRoleName() -> c
    int getRoleID() -> d
    void setRoleName(java.lang.String) -> a
    void setRoleID(char) -> a
    void setValidTimeStart(java.util.Date) -> a
    void setValidTimeStop(java.util.Date) -> b
    java.lang.String toString() -> toString
com.youchip.youmobile.model.network.BasicSOAPConfigFields -> com.youchip.youmobile.a.c.a:
    com.youchip.youmobile.model.network.BasicSOAPConfigFields DEVICE_IP -> a
    com.youchip.youmobile.model.network.BasicSOAPConfigFields SHARED_SECRET -> b
    com.youchip.youmobile.model.network.BasicSOAPConfigFields IDORGANIZER -> c
    com.youchip.youmobile.model.network.BasicSOAPConfigFields IDEVENT -> d
    com.youchip.youmobile.model.network.BasicSOAPConfigFields LOGSYNCINTERVAL -> e
    com.youchip.youmobile.model.network.BasicSOAPConfigFields LOGGINGSYNCSERVERIP -> f
    com.youchip.youmobile.model.network.BasicSOAPConfigFields LOGGINGSYNCSERVERPORTNR -> g
    com.youchip.youmobile.model.network.BasicSOAPConfigFields LOGFILEMAXSIZE -> h
    com.youchip.youmobile.model.network.BasicSOAPConfigFields BLACKLISTUPDATEINTERVAL -> i
    com.youchip.youmobile.model.network.BasicSOAPConfigFields VOUCHERMODIFIER -> j
    com.youchip.youmobile.model.network.BasicSOAPConfigFields FIRSTLEVELSEPARATOR -> k
    com.youchip.youmobile.model.network.BasicSOAPConfigFields DATEFORMATSTRING -> l
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CONFIGUPDATEINTERVAL -> m
    com.youchip.youmobile.model.network.BasicSOAPConfigFields SVCSTANDBY -> n
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CHIP_KEY_A -> o
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CHIP_KEY_AES -> p
    com.youchip.youmobile.model.network.BasicSOAPConfigFields DEVICE_ENABLED -> q
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CHIPRESULTDISPLAYDELAY -> r
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CHIPIOENABLEDELAY -> s
    com.youchip.youmobile.model.network.BasicSOAPConfigFields CHIPIORETRYDELAY -> t
    com.youchip.youmobile.model.network.BasicSOAPConfigFields GATEACCESSDELAY -> u
    com.youchip.youmobile.model.network.BasicSOAPConfigFields FIRSTCURRENCYTEXT -> v
    com.youchip.youmobile.model.network.BasicSOAPConfigFields SECONDCURRENCYTEXT -> w
    com.youchip.youmobile.model.network.BasicSOAPConfigFields MAX1STCUR -> x
    com.youchip.youmobile.model.network.BasicSOAPConfigFields MAX2NDCUR -> y
    com.youchip.youmobile.model.network.BasicSOAPConfigFields[] ENUM$VALUES -> z
    com.youchip.youmobile.model.network.BasicSOAPConfigFields[] values() -> values
    com.youchip.youmobile.model.network.BasicSOAPConfigFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.network.request.BasicConfigSOAPRequest -> com.youchip.youmobile.a.c.a.a:
    java.lang.String getNamespace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getActionPackage() -> c
com.youchip.youmobile.model.network.request.BlackListConfigSOAPRequest -> com.youchip.youmobile.a.c.a.b:
    java.lang.String getNamespace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getActionPackage() -> c
com.youchip.youmobile.model.network.request.ConfigSOAPRequest -> com.youchip.youmobile.a.c.a.c:
    java.lang.String NAMESPACE -> a
    java.lang.String METHOD_NAME -> b
    java.lang.String ACTION_PACKAGE -> c
    java.lang.String DEVICE_ID -> d
    java.lang.String SHARED_SECRET -> e
    java.lang.String EVENT_ID -> f
    java.lang.String getNameSpace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getAction() -> c
    java.lang.Object getProperty(int) -> a
    int getPropertyCount() -> d
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
    void setProperty(int,java.lang.Object) -> a
com.youchip.youmobile.model.network.request.GateConfigSOAPRequest -> com.youchip.youmobile.a.c.a.d:
    java.lang.String getNamespace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getActionPackage() -> c
com.youchip.youmobile.model.network.request.LogSyncSOAPRequest -> com.youchip.youmobile.a.c.a.e:
    java.lang.String NAMESPACE -> a
    java.lang.String METHOD_NAME -> b
    java.lang.String ACTION_PACKAGE -> c
    java.lang.String fileName -> d
    java.lang.String fileContent -> e
    java.lang.String filehash -> f
    java.lang.String getNameSpace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getAction() -> c
    java.lang.Object getProperty(int) -> a
    int getPropertyCount() -> d
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
    void setProperty(int,java.lang.Object) -> a
    java.lang.String loadFile(java.io.File) -> a
com.youchip.youmobile.model.network.request.ShopConfigSOAPRequest -> com.youchip.youmobile.a.c.a.f:
    java.lang.String getNamespace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getActionPackage() -> c
com.youchip.youmobile.model.network.request.SoapRequestData -> com.youchip.youmobile.a.c.a.g:
    java.lang.String getNamespace() -> a
    java.lang.String getMethodName() -> b
    java.lang.String getActionPackage() -> c
com.youchip.youmobile.model.network.response.BasicConfigSOAPResponse -> com.youchip.youmobile.a.c.b.a:
    java.util.Map list -> a
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
    java.util.Map getResultMap() -> a
com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse -> com.youchip.youmobile.a.c.b.b:
    java.util.List list -> a
    java.lang.String dateFormat -> b
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
    java.util.List getResult() -> a
com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields -> com.youchip.youmobile.a.c.b.c:
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields BlockedUntil -> a
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields idEvent -> b
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields idTicket -> c
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields Active -> d
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields UID -> e
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields[] ENUM$VALUES -> f
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields[] values() -> values
    com.youchip.youmobile.model.network.response.BlackListConfigSOAPResponse$GateConfigFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.network.response.GateConfigSOAPResponse -> com.youchip.youmobile.a.c.b.d:
    java.util.Map gateConfigs -> a
    java.lang.String dateFormat -> b
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
    com.youchip.youmobile.model.gate.AreaConfig bakeStandardGateConfig(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.youchip.youmobile.model.gate.VisitorRole bakeVisitorRole(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    com.youchip.youmobile.model.gate.AreaConfig bakeZoneOutConfig(com.youchip.youmobile.model.gate.AreaConfig) -> a
    java.util.List getResult() -> a
com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields -> com.youchip.youmobile.a.c.b.e:
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields AreaTitel -> a
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields GueltigBis -> b
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields GueltigVon -> c
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields Rolle -> d
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields idArea -> e
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields idEvent -> f
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields idRole -> g
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields isZone -> h
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields Direction -> i
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields[] ENUM$VALUES -> j
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields[] values() -> values
    com.youchip.youmobile.model.network.response.GateConfigSOAPResponse$GateConfigFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.network.response.LogSyncSOAPResponse -> com.youchip.youmobile.a.c.b.f:
    boolean result -> a
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
com.youchip.youmobile.model.network.response.LogSyncSOAPResponse$LogSyncFields -> com.youchip.youmobile.a.c.b.g:
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse$LogSyncFields LogSyncResult -> a
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse$LogSyncFields[] ENUM$VALUES -> b
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse$LogSyncFields[] values() -> values
    com.youchip.youmobile.model.network.response.LogSyncSOAPResponse$LogSyncFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse -> com.youchip.youmobile.a.c.b.h:
    java.util.Map list -> a
    void setSOAPResponse(org.ksoap2.serialization.SoapObject) -> a
    java.util.Map getResult() -> a
com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields -> com.youchip.youmobile.a.c.b.i:
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields PLU -> a
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields Titel -> b
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields Price -> c
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields TXType -> d
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields ProductGroup -> e
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields VATType -> f
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields FirstCurrencyAllowed -> g
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields SecondCurrencyAllowed -> h
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields VoucherAllowed -> i
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields Obsolete -> j
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields id -> k
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields[] ENUM$VALUES -> l
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields[] values() -> values
    com.youchip.youmobile.model.network.response.ShopConfigSOAPResponse$ShopConfigFields valueOf(java.lang.String) -> valueOf
com.youchip.youmobile.model.shop.ShopItemConfig -> com.youchip.youmobile.a.d.a:
    long plu -> a
    java.lang.String title -> b
    long price -> c
    com.youchip.youmobile.controller.txlog.TxType txType -> d
    java.lang.String productGroup -> e
    boolean isFirstCurrencyAllowed -> f
    boolean isSecondCurrencyAllowed -> g
    boolean isVoucherAllowed -> h
    long getPlu() -> a
    java.lang.String getTitle() -> b
    long getPrice() -> c
    com.youchip.youmobile.controller.txlog.TxType getTxType() -> d
    boolean isFirstCurrencyAllowed() -> e
    boolean isSecondCurrencyAllowed() -> f
    boolean isVoucherAllowed() -> g
    void setPlu(long) -> a
    void setTitle(java.lang.String) -> a
    void setPrice(long) -> b
    void setTxType(com.youchip.youmobile.controller.txlog.TxType) -> a
    void setFirstCurrencyAllowed(boolean) -> a
    void setSecondCurrencyAllowed(boolean) -> b
    void setVoucherAllowed(boolean) -> c
    void setProductGroup(java.lang.String) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.youchip.youmobile.model.shop.ShopItemConfig) -> a
    int compareTo(java.lang.Object) -> compareTo
com.youchip.youmobile.model.shop.ShoppingCart -> com.youchip.youmobile.a.d.b:
    void setItemQuantity(com.youchip.youmobile.model.shop.ShoppingCartItem) -> a
    long calcTotalPrice() -> a
    long calcTotalItems() -> b
    boolean needsPaymentType() -> c
    boolean hasItemWithTxType(com.youchip.youmobile.controller.txlog.TxType[]) -> a
    boolean hasItemOtherThanTxType(com.youchip.youmobile.controller.txlog.TxType) -> a
com.youchip.youmobile.model.shop.ShoppingCartItem -> com.youchip.youmobile.a.d.c:
    long quantity -> a
    long getQuantity() -> h
    void setQuantity(long) -> c
com.youchip.youmobile.utils.AlertBox -> com.youchip.youmobile.b.a:
    void allertOnWarning(android.content.Context,int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    void allertOnWarning(android.content.Context,int,int,android.content.DialogInterface$OnClickListener) -> a
    void allertOnWarning(android.content.Context,int,int) -> a
    void allertOnWarning(android.content.Context,int,java.lang.CharSequence) -> a
    void allertOnInfo(android.content.Context,int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    void allertOnInfo(android.content.Context,int,int,android.content.DialogInterface$OnClickListener) -> b
    void allertOnInfo(android.content.Context,int,java.lang.CharSequence) -> b
    void allertOnRequest(android.content.Context,int,int,android.content.DialogInterface$OnClickListener) -> c
    void allertOnRequest(android.content.Context,int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> c
com.youchip.youmobile.utils.DataConverter -> com.youchip.youmobile.b.b:
    java.lang.String byteArrayToSpacedHexString(byte[],int,java.lang.String,java.lang.String) -> a
    java.lang.String byteArrayToSpacedHexString(byte[],java.lang.String) -> a
    java.lang.String byteArrayToHexString(byte[],int) -> a
    java.lang.String byteArrayToWhiteSpaceHexString(byte[]) -> a
    java.lang.String byteArrayToHexString(byte[]) -> b
    byte[] hexStringToByteArray(java.lang.String) -> a
    byte[] intToByteArray(long,int) -> a
    long byteArrayToInt(byte[]) -> c
    java.lang.String byteArrayToString(byte[]) -> d
    java.util.Set getRelevantBlocks(java.lang.Iterable) -> a
    int uByteToInt(byte) -> a
    java.util.Date serviceFormatToJavaDate(java.lang.String,java.lang.String) -> a
    java.lang.String javaDateToServiceFormat(java.util.Date,java.lang.String) -> a
    java.lang.String getDateFormatString() -> a
    java.lang.Long getKeyByValue(java.util.Map,java.lang.String) -> a
    java.math.BigDecimal longToCurrency(long) -> a
com.youchip.youmobile.utils.NetWorkInfo -> com.youchip.youmobile.b.c:
    java.lang.String getIPAddress(boolean) -> a
com.youchip.youmobile.utils.SystemInfo -> com.youchip.youmobile.b.d:
    void evaluateExternalStorageState() -> a
    long getFreeExternalMemory() -> b
    java.util.List getLogFiles(java.io.File) -> a
    java.io.File getOldestLogFile(java.io.File) -> b
com.youchip.youmobile.view.ChipFieldExpandableListAdapter -> com.youchip.youmobile.view.a:
    android.view.LayoutInflater inflater -> a
    com.youchip.youmobile.view.GroupedKeyValueList groupData -> b
    int groupCollapsedView -> c
    int groupExpandedView -> d
    int childView -> e
    int groupTitleResourceId -> f
    int itemTitleResourceId -> g
    int itemContentResourceId -> h
    com.youchip.youmobile.view.TitleContentPair getChild(int,int) -> a
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.util.List getGroup(int) -> a
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    java.lang.Integer getGroupExpandedView() -> a
    java.lang.Integer getGroupCollapsedView() -> b
    java.lang.Integer getChildView() -> c
    int getGroupTitleResourceId() -> d
    int getTitleResourceId() -> e
    int getContentResourceId() -> f
    void addElement(java.lang.String,java.lang.String,java.lang.String) -> a
    void clear() -> g
    java.lang.Object getChild(int,int) -> getChild
    java.lang.Object getGroup(int) -> getGroup
com.youchip.youmobile.view.ChipFieldExpandableListAdapter$KeyValueHolder -> com.youchip.youmobile.view.b:
    android.widget.TextView title -> a
    android.widget.TextView content -> b
com.youchip.youmobile.view.ExclusiveExpandGroupExpandListener -> com.youchip.youmobile.view.c:
    int previousItem -> a
    android.widget.ExpandableListView expandableListView -> b
    void onGroupExpand(int) -> onGroupExpand
com.youchip.youmobile.view.GroupedKeyValueList -> com.youchip.youmobile.view.d:
    java.util.Map groupedList -> a
    java.util.List idLink -> b
    void addGroup(java.lang.String) -> a
    void addElement(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List getGroup(int) -> a
    java.lang.String getGroupName(int) -> b
    int size() -> a
    void clear() -> b
com.youchip.youmobile.view.InputFilterMinMax -> com.youchip.youmobile.view.e:
    long min -> a
    long max -> b
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    boolean isInRange(long,long,long) -> a
com.youchip.youmobile.view.TimeInputFilter -> com.youchip.youmobile.view.f:
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.youchip.youmobile.view.TitleContentAdapter -> com.youchip.youmobile.view.g:
    android.view.LayoutInflater inflater -> a
    java.util.List data -> b
    int layoutResourceId -> c
    int keyResourceId -> d
    int valueResourceId -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.youchip.youmobile.view.TitleContentAdapter$KeyValueHolder -> com.youchip.youmobile.view.h:
    android.widget.TextView key -> a
    android.widget.TextView value -> b
com.youchip.youmobile.view.TitleContentPair -> com.youchip.youmobile.view.i:
    java.lang.String title -> a
    java.lang.String content -> b
    java.lang.String getTitle() -> a
    java.lang.CharSequence getContent() -> b
com.youchip.youmobile.view.shop.QuantityPickerDialog -> com.youchip.youmobile.view.shop.a:
    android.content.Context context -> a
    com.youchip.youmobile.model.shop.ShoppingCartItem item -> b
    java.lang.String currencySymbol -> c
    android.widget.TextView itemTotal -> d
    android.widget.NumberPicker quantity -> e
    android.widget.NumberPicker$OnValueChangeListener onValueChangedListener -> f
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    android.widget.TextView access$0(com.youchip.youmobile.view.shop.QuantityPickerDialog) -> a
    com.youchip.youmobile.model.shop.ShoppingCartItem access$1(com.youchip.youmobile.view.shop.QuantityPickerDialog) -> b
    java.lang.String access$2(com.youchip.youmobile.view.shop.QuantityPickerDialog) -> c
    android.widget.NumberPicker access$3(com.youchip.youmobile.view.shop.QuantityPickerDialog) -> d
com.youchip.youmobile.view.shop.QuantityPickerDialog$1 -> com.youchip.youmobile.view.shop.b:
    com.youchip.youmobile.view.shop.QuantityPickerDialog this$0 -> a
    void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.youchip.youmobile.view.shop.QuantityPickerDialog$2 -> com.youchip.youmobile.view.shop.c:
    com.youchip.youmobile.view.shop.QuantityPickerDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.view.shop.QuantityPickerDialog$3 -> com.youchip.youmobile.view.shop.d:
    com.youchip.youmobile.view.shop.QuantityPickerDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.view.shop.ShopItemAdapter -> com.youchip.youmobile.view.shop.e:
    android.view.LayoutInflater inflater -> a
    java.util.List itemList -> b
    com.youchip.youmobile.model.shop.ShoppingCart shoppingCart -> c
    int childView -> d
    int elementResourceId -> e
    android.content.Context context -> f
    boolean isCancelationMode -> g
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Integer getChildView() -> a
    void setCancelationMode(boolean) -> a
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType() -> b
com.youchip.youmobile.view.shop.ShopItemAdapter$ShopItemHolder -> com.youchip.youmobile.view.shop.f:
    com.youchip.youmobile.view.shop.ShopItemTextView shopItem -> a
com.youchip.youmobile.view.shop.ShopItemQuantatiyChangeAlert -> com.youchip.youmobile.view.shop.g:
    void onSubmitQuantityChange(com.youchip.youmobile.model.shop.ShoppingCartItem) -> a
com.youchip.youmobile.view.shop.ShopItemTextView -> com.youchip.youmobile.view.shop.ShopItemTextView:
    android.graphics.Paint paint -> a
    long quantity -> b
    int quantity_bg_color -> c
    int quantity_font_color -> d
    float quantity_font_scale -> e
    float quantity_bg_scale -> f
    int radius -> g
    int centerX -> h
    int centerY -> i
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas) -> a
    void drawQuantity(android.graphics.Canvas) -> b
    void setCounterRadius() -> c
    void setWidth(int) -> setWidth
    void calcCenterX() -> a
    void setHeight(int) -> setHeight
    void calcCenterY() -> b
    int getItemCounterFontColor() -> getItemCounterFontColor
    void setItemCounterFontColor(int) -> setItemCounterFontColor
    long getQuantity() -> getQuantity
    void setQuantity(long) -> setQuantity
    int getItemCounterBackgroundColor() -> getItemCounterBackgroundColor
    void setItemCounterBackgroundColor(int) -> setItemCounterBackgroundColor
    float getQuantityFontScale() -> getQuantityFontScale
    void setQuantityFontScale(float) -> setQuantityFontScale
    float getQuantityBackgroundScale() -> getQuantityBackgroundScale
    void setQuantityBackgroundScale(float) -> setQuantityBackgroundScale
com.youchip.youmobile.view.shop.ShopItemValueChangeAlert -> com.youchip.youmobile.view.shop.h:
    void onSubmitValueChange(com.youchip.youmobile.model.shop.ShoppingCartItem) -> b
com.youchip.youmobile.view.shop.ShoppingCartDialog -> com.youchip.youmobile.view.shop.i:
    com.youchip.youmobile.view.shop.ShoppingCartItemAdapter shoppingCartItemAdapter -> a
    android.content.Context context -> b
    java.lang.String currencySymbol -> c
    boolean cancelable -> d
    com.youchip.youmobile.model.shop.ShoppingCart shoppingCart -> e
    android.content.DialogInterface$OnClickListener submitListener -> f
    android.content.DialogInterface$OnClickListener cancelListener -> g
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.youchip.youmobile.view.shop.ShoppingCartDialog$1 -> com.youchip.youmobile.view.shop.j:
    com.youchip.youmobile.view.shop.ShoppingCartDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.view.shop.ShoppingCartDialog$2 -> com.youchip.youmobile.view.shop.k:
    com.youchip.youmobile.view.shop.ShoppingCartDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.view.shop.ShoppingCartItemAdapter -> com.youchip.youmobile.view.shop.l:
    android.view.LayoutInflater inflater -> a
    java.util.List itemList -> b
    int rowViewRID -> c
    android.content.Context context -> d
    int itemPriceRID -> e
    int itemInfoRID -> f
    int itemQuantityRID -> g
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Integer getChildView() -> a
    int[] $SWITCH_TABLE$com$youchip$youmobile$controller$txlog$TxType() -> b
com.youchip.youmobile.view.shop.ShoppingCartItemAdapter$ShopItemHolder -> com.youchip.youmobile.view.shop.m:
    android.widget.TextView itemInfo -> a
    android.widget.TextView itemQuantity -> b
    android.widget.TextView itemPrice -> c
com.youchip.youmobile.view.shop.ValuePickerDialog -> com.youchip.youmobile.view.shop.n:
    java.lang.String CURRENT_CLASS -> a
    android.content.Context context -> b
    com.youchip.youmobile.model.shop.ShoppingCartItem item -> c
    java.lang.String currencySymbol -> d
    android.widget.NumberPicker mainUnit -> e
    android.widget.NumberPicker fractionalUnit -> f
    android.widget.TextView currency -> g
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    android.widget.NumberPicker access$0(com.youchip.youmobile.view.shop.ValuePickerDialog) -> a
    android.widget.NumberPicker access$1(com.youchip.youmobile.view.shop.ValuePickerDialog) -> b
    com.youchip.youmobile.model.shop.ShoppingCartItem access$2(com.youchip.youmobile.view.shop.ValuePickerDialog) -> c
    java.lang.String access$3() -> a
com.youchip.youmobile.view.shop.ValuePickerDialog$1 -> com.youchip.youmobile.view.shop.o:
    com.youchip.youmobile.view.shop.ValuePickerDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.youchip.youmobile.view.shop.ValuePickerDialog$2 -> com.youchip.youmobile.view.shop.p:
    com.youchip.youmobile.view.shop.ValuePickerDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.ksoap2.HeaderProperty -> a.a.a:
    java.lang.String key -> a
    java.lang.String value -> b
    java.lang.String getKey() -> a
    java.lang.String getValue() -> b
org.ksoap2.SoapEnvelope -> a.a.b:
    java.lang.Object bodyIn -> a
    java.lang.Object bodyOut -> b
    org.kxml2.kdom.Element[] headerIn -> c
    org.kxml2.kdom.Element[] headerOut -> d
    java.lang.String encodingStyle -> e
    int version -> f
    java.lang.String env -> g
    java.lang.String enc -> h
    java.lang.String xsi -> i
    java.lang.String xsd -> j
    boolean stringToBoolean(java.lang.String) -> a
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void parseHeader(org.xmlpull.v1.XmlPullParser) -> b
    void parseBody(org.xmlpull.v1.XmlPullParser) -> c
    void write(org.xmlpull.v1.XmlSerializer) -> a
    void writeHeader(org.xmlpull.v1.XmlSerializer) -> b
    void writeBody(org.xmlpull.v1.XmlSerializer) -> c
    void setOutputSoapObject(java.lang.Object) -> a
org.ksoap2.SoapFault -> a.a.c:
    java.lang.String faultcode -> a
    java.lang.String faultstring -> b
    java.lang.String faultactor -> c
    org.kxml2.kdom.Node detail -> d
    int version -> e
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.ksoap2.SoapFault12 -> a.a.d:
    org.kxml2.kdom.Node Code -> f
    org.kxml2.kdom.Node Reason -> g
    org.kxml2.kdom.Node Node -> h
    org.kxml2.kdom.Node Role -> i
    org.kxml2.kdom.Node Detail -> j
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void parseSelf(org.xmlpull.v1.XmlPullParser) -> b
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.ksoap2.serialization.AttributeContainer -> a.a.a.a:
    java.util.Vector attributes -> a
    void getAttributeInfo(int,org.ksoap2.serialization.AttributeInfo) -> a
    java.lang.Object getAttribute(int) -> b
    boolean hasAttribute(java.lang.String) -> a
    java.lang.Object getAttributeSafely(java.lang.String) -> b
    java.lang.Integer attributeIndex(java.lang.String) -> c
    int getAttributeCount() -> a
    boolean attributesAreEqual(org.ksoap2.serialization.AttributeContainer) -> a
    void addAttribute(java.lang.String,java.lang.Object) -> a
    void addAttribute(org.ksoap2.serialization.AttributeInfo) -> a
org.ksoap2.serialization.AttributeInfo -> a.a.a.b:
org.ksoap2.serialization.DM -> a.a.a.c:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> a
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> a
org.ksoap2.serialization.FwdRef -> a.a.a.d:
    org.ksoap2.serialization.FwdRef next -> a
    java.lang.Object obj -> b
    int index -> c
org.ksoap2.serialization.KvmSerializable -> a.a.a.e:
    java.lang.Object getProperty(int) -> a
    int getPropertyCount() -> d
    void setProperty(int,java.lang.Object) -> a
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
org.ksoap2.serialization.Marshal -> a.a.a.f:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> a
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> a
org.ksoap2.serialization.PropertyInfo -> a.a.a.g:
    java.lang.Class OBJECT_CLASS -> a
    java.lang.Class STRING_CLASS -> b
    java.lang.Class INTEGER_CLASS -> c
    java.lang.Class LONG_CLASS -> d
    java.lang.Class BOOLEAN_CLASS -> e
    java.lang.Class VECTOR_CLASS -> f
    org.ksoap2.serialization.PropertyInfo OBJECT_TYPE -> g
    java.lang.String name -> h
    java.lang.String namespace -> i
    int flags -> j
    java.lang.Object value -> k
    java.lang.Object type -> l
    boolean multiRef -> m
    org.ksoap2.serialization.PropertyInfo elementType -> n
    void clear() -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.lang.String getNamespace() -> c
    void setNamespace(java.lang.String) -> b
    java.lang.Object getType() -> d
    void setType(java.lang.Object) -> a
    java.lang.Object getValue() -> e
    void setValue(java.lang.Object) -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.ksoap2.serialization.SoapObject -> a.a.a.h:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.util.Vector properties -> c
    java.lang.Class class$org$ksoap2$serialization$SoapObject -> d
    java.lang.Class class$java$lang$String -> e
    boolean equals(java.lang.Object) -> equals
    boolean isPropertyEqual(java.lang.Object,int) -> a
    java.lang.String getName() -> b
    java.lang.String getNamespace() -> c
    java.lang.Object getProperty(int) -> a
    java.lang.Object getProperty(java.lang.String) -> c
    java.lang.Object getPrimitiveProperty(java.lang.String) -> d
    java.lang.String getPrimitivePropertyAsString(java.lang.String) -> e
    java.lang.Integer propertyIndex(java.lang.String) -> g
    int getPropertyCount() -> d
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
    void getPropertyInfo(int,org.ksoap2.serialization.PropertyInfo) -> a
    org.ksoap2.serialization.SoapObject newInstance() -> e
    void setProperty(int,java.lang.Object) -> a
    org.ksoap2.serialization.SoapObject addProperty(java.lang.String,java.lang.Object) -> b
    org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo) -> a
    org.ksoap2.serialization.SoapObject addSoapObject(org.ksoap2.serialization.SoapObject) -> a
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> f
org.ksoap2.serialization.SoapPrimitive -> a.a.a.i:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.lang.String value -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getNamespace() -> b
    java.lang.String getName() -> c
org.ksoap2.serialization.SoapSerializationEnvelope -> a.a.a.j:
    org.ksoap2.serialization.Marshal DEFAULT_MARSHAL -> k
    java.util.Hashtable properties -> l
    java.util.Hashtable idMap -> m
    java.util.Vector multiRef -> n
    boolean implicitTypes -> o
    boolean dotNet -> p
    boolean avoidExceptionForUnknownProperty -> q
    java.util.Hashtable qNameToClass -> r
    java.util.Hashtable classToQName -> s
    boolean addAdornments -> t
    java.lang.Class class$org$ksoap2$serialization$SoapObject -> u
    void parseBody(org.xmlpull.v1.XmlPullParser) -> c
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.SoapObject) -> a
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.KvmSerializable) -> a
    java.lang.Object readUnknown(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> a
    int getIndex(java.lang.String,int,int) -> a
    void readVector(org.xmlpull.v1.XmlPullParser,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object read(org.xmlpull.v1.XmlPullParser,java.lang.Object,int,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object[] getInfo(java.lang.Object,java.lang.Object) -> a
    void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal) -> a
    void addMapping(java.lang.String,java.lang.String,java.lang.Class) -> a
    java.lang.Object getResponse() -> a
    void writeBody(org.xmlpull.v1.XmlSerializer) -> c
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.SoapObject) -> a
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.KvmSerializable) -> a
    void writeProperty(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo) -> a
    void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> a
    void writeVectorBody(org.xmlpull.v1.XmlSerializer,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Class class$(java.lang.String) -> b
org.ksoap2.transport.HttpResponseException -> a.a.b.a:
    int statusCode -> a
org.ksoap2.transport.HttpTransportSE -> a.a.b.b:
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> a
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> a
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List,java.io.File) -> a
    java.io.InputStream readDebug(java.io.InputStream,int,java.io.File) -> a
    java.io.InputStream getUnZippedInputStream(java.io.InputStream) -> a
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> a
org.ksoap2.transport.ServiceConnection -> a.a.b.c:
    void disconnect() -> a
    java.util.List getResponseProperties() -> b
    int getResponseCode() -> c
    void setRequestProperty(java.lang.String,java.lang.String) -> a
    void setRequestMethod(java.lang.String) -> a
    void setFixedLengthStreamingMode(int) -> a
    java.io.OutputStream openOutputStream() -> d
    java.io.InputStream openInputStream() -> e
    java.io.InputStream getErrorStream() -> f
org.ksoap2.transport.ServiceConnectionSE -> a.a.b.d:
    java.net.HttpURLConnection connection -> a
    void disconnect() -> a
    java.util.List getResponseProperties() -> b
    int getResponseCode() -> c
    void setRequestProperty(java.lang.String,java.lang.String) -> a
    void setRequestMethod(java.lang.String) -> a
    void setFixedLengthStreamingMode(int) -> a
    java.io.OutputStream openOutputStream() -> d
    java.io.InputStream openInputStream() -> e
    java.io.InputStream getErrorStream() -> f
org.ksoap2.transport.Transport -> a.a.b.e:
    java.net.Proxy proxy -> a
    java.lang.String url -> b
    int timeout -> c
    boolean debug -> d
    java.lang.String requestDump -> e
    java.lang.String responseDump -> f
    java.lang.String xmlVersionTag -> g
    int bufferLength -> h
    void parseResponse(org.ksoap2.SoapEnvelope,java.io.InputStream) -> a
    byte[] createRequestData(org.ksoap2.SoapEnvelope,java.lang.String) -> a
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> a
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> a
org.kxml2.io.KXmlParser -> a.b.a.a:
    java.lang.Object location -> b
    java.lang.String version -> c
    java.lang.Boolean standalone -> d
    boolean processNsp -> e
    boolean relaxed -> f
    java.util.Hashtable entityMap -> g
    int depth -> h
    java.lang.String[] elementStack -> i
    java.lang.String[] nspStack -> j
    int[] nspCounts -> k
    java.io.Reader reader -> l
    java.lang.String encoding -> m
    char[] srcBuf -> n
    int srcPos -> o
    int srcCount -> p
    int line -> q
    int column -> r
    char[] txtBuf -> s
    int txtPos -> t
    int type -> u
    boolean isWhitespace -> v
    java.lang.String namespace -> w
    java.lang.String prefix -> x
    java.lang.String name -> y
    boolean degenerated -> z
    int attributeCount -> A
    java.lang.String[] attributes -> B
    java.lang.String error -> C
    int[] peek -> D
    int peekCount -> E
    boolean wasCR -> F
    boolean unresolved -> G
    boolean token -> H
    boolean isProp(java.lang.String,boolean,java.lang.String) -> a
    boolean adjustNsp() -> m
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> a
    void error(java.lang.String) -> b
    void exception(java.lang.String) -> c
    void nextImpl() -> n
    int parseLegacy(boolean) -> a
    void parseDoctype(boolean) -> b
    void parseEndTag() -> o
    int peekType() -> p
    java.lang.String get(int) -> f
    void push(int) -> g
    void parseStartTag(boolean) -> c
    void pushEntity() -> q
    void pushText(int,boolean) -> a
    void read(char) -> a
    int read() -> r
    int peek(int) -> h
    java.lang.String readName() -> s
    void skip() -> t
    void setInput(java.io.Reader) -> a
    void setInput(java.io.InputStream,java.lang.String) -> a
    int getNamespaceCount(int) -> a
    java.lang.String getNamespacePrefix(int) -> b
    java.lang.String getNamespaceUri(int) -> c
    java.lang.String getNamespace(java.lang.String) -> a
    int getDepth() -> a
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> b
    int getColumnNumber() -> c
    java.lang.String getText() -> d
    java.lang.String getNamespace() -> e
    java.lang.String getName() -> f
    boolean isEmptyElementTag() -> g
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeType(int) -> d
    java.lang.String getAttributeNamespace(int) -> e
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> h
    int next() -> i
    int nextToken() -> j
    int nextTag() -> k
    void require(int,java.lang.String,java.lang.String) -> a
    java.lang.String nextText() -> l
    void setFeature(java.lang.String,boolean) -> a
org.kxml2.io.KXmlSerializer -> a.b.a.b:
    java.io.Writer writer -> a
    boolean pending -> b
    int auto -> c
    int depth -> d
    java.lang.String[] elementStack -> e
    int[] nspCounts -> f
    java.lang.String[] nspStack -> g
    boolean[] indent -> h
    boolean unicode -> i
    java.lang.String encoding -> j
    void check(boolean) -> a
    void writeEscaped(java.lang.String,int) -> a
    void docdecl(java.lang.String) -> a
    void entityRef(java.lang.String) -> b
    java.lang.String getPrefix(java.lang.String,boolean) -> a
    java.lang.String getPrefix(java.lang.String,boolean,boolean) -> a
    void ignorableWhitespace(java.lang.String) -> c
    void setPrefix(java.lang.String,java.lang.String) -> a
    void setOutput(java.io.Writer) -> a
    void setOutput(java.io.OutputStream,java.lang.String) -> a
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> a
    void flush() -> a
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> c
    java.lang.String getNamespace() -> b
    int getDepth() -> c
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> d
    void cdsect(java.lang.String) -> e
    void comment(java.lang.String) -> f
    void processingInstruction(java.lang.String) -> g
org.kxml2.kdom.Element -> a.b.b.a:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.util.Vector attributes -> c
    org.kxml2.kdom.Node parent -> d
    java.util.Vector prefixes -> e
    void init() -> a
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> a
    int getAttributeCount() -> b
    java.lang.String getAttributeNamespace(int) -> a
    java.lang.String getAttributeName(int) -> b
    java.lang.String getAttributeValue(int) -> c
    java.lang.String getName() -> c
    java.lang.String getNamespace() -> d
    java.lang.String getNamespacePrefix(int) -> d
    java.lang.String getNamespaceUri(int) -> e
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void setAttribute(java.lang.String,java.lang.String,java.lang.String) -> a
    void setPrefix(java.lang.String,java.lang.String) -> b
    void setParent(org.kxml2.kdom.Node) -> a
    void write(org.xmlpull.v1.XmlSerializer) -> a
org.kxml2.kdom.Node -> a.b.b.b:
    java.util.Vector children -> f
    java.lang.StringBuffer types -> g
    void addChild(int,int,java.lang.Object) -> a
    void addChild(int,java.lang.Object) -> a
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> a
    java.lang.Object getChild(int) -> f
    int getChildCount() -> e
    org.kxml2.kdom.Element getElement(int) -> g
    org.kxml2.kdom.Element getElement(java.lang.String,java.lang.String) -> c
    java.lang.String getText(int) -> h
    int getType(int) -> i
    int indexOf(java.lang.String,java.lang.String,int) -> a
    boolean isText(int) -> j
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void write(org.xmlpull.v1.XmlSerializer) -> a
    void writeChildren(org.xmlpull.v1.XmlSerializer) -> b
org.xmlpull.v1.XmlPullParser -> a.c.a.a:
    java.lang.String[] TYPES -> a
    void setFeature(java.lang.String,boolean) -> a
    void setInput(java.io.InputStream,java.lang.String) -> a
    int getNamespaceCount(int) -> a
    java.lang.String getNamespacePrefix(int) -> b
    java.lang.String getNamespaceUri(int) -> c
    java.lang.String getNamespace(java.lang.String) -> a
    int getDepth() -> a
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> b
    int getColumnNumber() -> c
    java.lang.String getText() -> d
    java.lang.String getNamespace() -> e
    java.lang.String getName() -> f
    boolean isEmptyElementTag() -> g
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> e
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeType(int) -> d
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> h
    int next() -> i
    int nextToken() -> j
    void require(int,java.lang.String,java.lang.String) -> a
    java.lang.String nextText() -> l
    int nextTag() -> k
org.xmlpull.v1.XmlPullParserException -> a.c.a.b:
    java.lang.Throwable detail -> a
    int row -> b
    int column -> c
    void printStackTrace() -> printStackTrace
org.xmlpull.v1.XmlSerializer -> a.c.a.c:
    void setOutput(java.io.OutputStream,java.lang.String) -> a
    void setPrefix(java.lang.String,java.lang.String) -> a
    java.lang.String getPrefix(java.lang.String,boolean) -> a
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> a
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> c
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> d
    void cdsect(java.lang.String) -> e
    void entityRef(java.lang.String) -> b
    void processingInstruction(java.lang.String) -> g
    void comment(java.lang.String) -> f
    void docdecl(java.lang.String) -> a
    void ignorableWhitespace(java.lang.String) -> c
    void flush() -> a
